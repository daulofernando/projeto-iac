---
- name: "Criando usuários para o prometheus"
  user:
    name: "{{ item }}" 
    state: present
    shell: /bin/false  
  loop:
  - prometheus
  - node_exporter      
 
- name: "Criando diretorio para funcionamento do prometheus"
  file:
    path: "{{ item }}"
    state: directory
  loop:
  - /var/lib/prometheus
  - /etc/prometheus
  - /tmp/prometheus # necessário para extrair o prometheus

- name: "Baixando o prometheus"
  get_url: 
    url: {{ prometheuslink }}
    dest: /tmp/prometheus.tar

- name: "Descompactando o prometheus"
  unarchive:
    src: /tmp/prometheus.tar
    dest: /tmp/prometheus
    extra_opts: [--strip-components=1]
    remote_src: yes

- name: "Copiando arquivos do prometheus"
  copy:
    src: "{{ item.src }}" 
    dest: "{{ item.dest }}" 
    remote_src: yes 
  loop:   
  - { src: '/tmp/prometheus/consoles', dest: '/etc/prometheus' }
  - { src: '/tmp/prometheus/console_libraries', dest: '/etc/prometheus' }
  - { src: '/tmp/prometheus/prometheus', dest: '/usr/local/bin' }
  - { src: '/tmp/prometheus/promtool', dest: '/usr/local/bin' }

- name: "Tornando o usuário prometheus dono das pastas e arquivos"
  file:
    path: "{{ item.src }}"
    owner: prometheus
    group: prometheus
    state: "{{ item.state }}"
    recurse: "{{ item.recursive }}"
    mode: "{{ item.mode }}"
  loop: 
  - { src: '/etc/prometheus', state: 'directory', recursive: 'yes', mode: '' }
  - { src: '/var/lib/prometheus', state: 'directory', recursive: 'yes', mode: '' }
  - { src: '/usr/local/bin/prometheus', state: 'file', recursive: 'no', mode: '+x' }
  - { src: '/usr/local/bin/promtool', state: 'file', recursive: 'no', mode: '' }

- name: "Copiando arquivos para funcionamento do prometheus"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - { src: '../templates/prometheus.yml', dest: '/etc/prometheus/prometheus.yml' }
    - { src: '../templates/prometheus.service', dest: '/etc/systemd/system/prometheus.service' }

  notify: restart-prometheus